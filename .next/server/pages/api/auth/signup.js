"use strict";(()=>{var e={};e.id=11,e.ids=[11],e.modules={8432:e=>{e.exports=require("bcryptjs")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6631:(e,a,r)=>{r.r(a),r.d(a,{config:()=>p,default:()=>l,routeModule:()=>c});var s={};r.r(s),r.d(s,{default:()=>handler});var t=r(1802),i=r(7153),n=r(6249),o=r(8432),u=r.n(o),d=r(2995);async function handler(e,a){if("POST"!==e.method)return a.status(405).json({message:"Method not allowed"});try{let{name:r,email:s,password:t}=e.body,i=await d.Z.user.findUnique({where:{email:s}});if(i)return a.status(400).json({message:"User already exists"});let n=await u().hash(t,12),o=await d.Z.user.create({data:{name:r,email:s,password:n}}),{password:l,...p}=o;a.status(201).json(p)}catch(e){console.error("Signup error:",e),a.status(500).json({message:"Something went wrong"})}}let l=(0,n.l)(s,"default"),p=(0,n.l)(s,"config"),c=new t.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/auth/signup",pathname:"/api/auth/signup",bundlePath:"",filename:""},userland:s})},2995:(e,a,r)=>{r.d(a,{Z:()=>i});let s=require("@prisma/client"),t=global.prisma||new s.PrismaClient,i=t}};var a=require("../../../webpack-api-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),r=a.X(0,[222],()=>__webpack_exec__(6631));module.exports=r})();