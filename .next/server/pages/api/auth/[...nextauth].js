"use strict";(()=>{var e={};e.id=748,e.ids=[748],e.modules={8432:e=>{e.exports=require("bcryptjs")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},936:(e,r,a)=>{a.r(r),a.d(r,{config:()=>f,default:()=>h,routeModule:()=>x});var i={};a.r(i),a.d(i,{default:()=>c});var s=a(1802),t=a(7153),n=a(6249);let d=require("next-auth");var l=a.n(d);let o=require("next-auth/providers/credentials");var u=a.n(o),p=a(8432),m=a.n(p),w=a(2995);let c=l()({providers:[u()({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Email and password required");let r=await w.Z.user.findUnique({where:{email:e.email}});if(!r)throw Error("No user found with this email");let a=await m().compare(e.password,r.password);if(!a)throw Error("Invalid password");return{id:r.id,email:r.email,name:r.name}}})],session:{strategy:"jwt"},pages:{signIn:"/auth/signin",error:"/auth/error"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id),e)}}),h=(0,n.l)(i,"default"),f=(0,n.l)(i,"config"),x=new s.PagesAPIRouteModule({definition:{kind:t.x.PAGES_API,page:"/api/auth/[...nextauth]",pathname:"/api/auth/[...nextauth]",bundlePath:"",filename:""},userland:i})},2995:(e,r,a)=>{a.d(r,{Z:()=>t});let i=require("@prisma/client"),s=global.prisma||new i.PrismaClient,t=s}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),a=r.X(0,[222],()=>__webpack_exec__(936));module.exports=a})();